name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  ECR_REPOSITORY: noiserepo1
  IMAGE_TAG: ${{ github.sha }}

jobs:

  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AKIAZYJQCOYWQTOW22HB }}
        aws-secret-access-key: ${{ secrets.TAndNdY6m9QP0q/NTxZl53knVPUYEigJWmGoAWvp }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to Kubernetes
      env:
        ECR_REPOSITORY: noiserepo1
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update Kubernetes deployment with the new image
        kubectl set image deployment/web-app web-app=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
